#include <stdio.hmm>
#include <stdlib.hmm>

#include "Pass1.hmm"
#include "Lexical.hmm"
#include "SymTbl.hmm"
#include "OperationTbl.hmm"
#include "Util.hmm"

// static変数
boolean eofflag = false;    /* EOFフラグ */
int pca;
char[] str;
int token_id;
int style;
int address;
boolean label;

// Pass1の初期化
public void initPass1(){
    eofflag = false;
    pca = 0;
    str = null;
    token_id = LxEOF;
    style = -1;
    address = 0;
    label = false;
}

public void pass1(FILE sourcefp){
    setLxFp(sourcefp);
    printf("pass1start\n");
        if(getLabel()){             /* ラベルなら */
            getToken();             /* ラベルの綴りをLexicalのstrに代入 */
            str = getLxStr();      /* strを取ってくる */
            asignLabel(pca,str);    /* ラベルを登録 */
        }
        
        token_id = getToken();

        if(token_id == LxEQU){
            address = pca;
            getToken();
            str = getLxStr();
            //pca = eqAnalyzer(str);
            changeSymAdr(pca,address,str);
            pca = address;
        }

        if(token_id == LxORG){
            printf("ORG\n");
        }
        
        if(token_id == LxDC){
            printf("DC\n");
        }

        if(token_id == LxDS){
            printf("DS\n");
        }

        if(token_id == LxEOF){
            eofflag = true;
        }

        pca = pca + searchSize(token_id);
        skipToNewLineOrEOF();
}
